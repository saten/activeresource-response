{"name":"Activeresource-response","body":"### Activeresource-response\r\n\r\nThis gem adds possibility to access http response object from result (single object or collection) of activeresource call (methods : find, all, first, last, get )\r\n\r\n\r\n\r\n### Why It can be used?\r\nSuch functionallity can be used for easily implementing pagination in a REST API so that an ActiveResource client can navigate paginated results.\r\n\r\n### How to use?\r\nAdd dependency to your Gemfile\r\n\r\n```ruby\r\n  gem \"activeresource-response\"\r\n```\r\nJust open your ActiveResource class  and add \r\n\r\n```ruby \r\n  add_response_method :your_method_name\r\n```\r\n\r\nYou can add method to ActiveResource::Base to use it in all subclasses\r\n\r\n```ruby\r\n  class ActiveResource::Base\r\n    add_response_method :my_response  \r\n  end\r\n```\r\n\r\n### Full example of usage with kaminari gem\r\n\r\nRest Client\r\n\r\n```ruby\r\n  class Order < ActiveResource::Base\r\n    self.format = :json\r\n    self.site = 'http://0.0.0.0:3000/'\r\n    self.element_name = \"order\" \r\n    add_response_method :http_response  # our new method for returned objects \r\n  end\r\n```\r\n\r\nServer Side\r\n\r\n```ruby\r\n  class OrdersController < ApplicationController\r\n    def index\r\n      @orders = Order.page(params[:page]).per(params[:per_page])\r\n      response.headers[\"X-total\"] = @orders.total_count.to_s\r\n      response.headers[\"X-offset\"] = @orders.offset_value.to_s\r\n      response.headers[\"X-limit\"] = @orders.limit_value.to_s\r\n      respond_with(@orders)\r\n    end\r\n  end\r\n```\r\n\r\nClient Side\r\n\r\n```ruby\r\n  class OrdersController < ApplicationController\r\n    def index\r\n      orders = Order.all(:params=>params)     \r\n      @orders = Kaminari::PaginatableArray.new(\r\n        orders,{\r\n                :limit => orders.http_response['X-limit'].to_i,\r\n             \t:offset =>orders.http_response['X-offset'].to_i,\r\n             \t:total_count => orders.http_response['X-total'].to_i\r\n        }) \r\n    end\r\n  end\r\n```\r\n \r\n### Every time when http connection invoked ActiveResource connection object  stores http response. You can access it with http_response method. \r\nExample\r\n\r\n\r\n```ruby\r\n  class Order < ActiveResource::Base\r\n    self.site = 'http://0.0.0.0:3000/'\r\n    self.element_name = \"order\" \r\n    add_response_method :my_response  # our new method\r\n  end\r\n\r\n  orders = Order.all\r\n  first_order = Order.find(1) \r\n  orders.my_response['content-length'] \r\n  # => \"3831\" \r\n  first_order.my_response['content-length'] \r\n  #=> \"260\"\r\n  #connection also always has last http response object , to access it use http_response method\r\n  Order.connection.http_response.to_hash\r\n  # => {\"content-type\"=>[\"application/json; charset=utf-8\"], \"x-ua-compatible\"=>[\"IE=Edge\"], \"etag\"=>[\"\\\"573cabd02b2f1f90405f7f4f77995fab\\\"\"], \"cache-control\"=>[\"max-age=0, private, must-revalidate\"], \"x-request-id\"=>[\"2911c13a0c781044c474450ed789613d\"], \"x-runtime\"=>[\"0.071018\"], \"content-length\"=>[\"260\"], \"server\"=>[\"WEBrick/1.3.1 (Ruby/1.9.2/2011-02-18)\"], \"date\"=>[\"Sun, 19 Feb 2012 10:21:29 GMT\"], \"connection\"=>[\"close\"]} \r\n```  \r\n\r\n\r\n### Methods to access headers and cookies\r\nYou can get cookies and headers from response \r\nExample\r\n\r\n```ruby\r\n  class Country < ActiveResource::Base\r\n    self.site = 'http://0.0.0.0:3000/'\r\n    add_response_method :my_response  # our new method\r\n  end\r\n  countries = Country.all\r\n  countries.my_response.headers\r\n\r\n # keys are symbolized => {:content_type=>[\"application/json; charset=utf-8\"], :x_ua_compatible=>[\"IE=Edge\"], ..., :set_cookie=>[\"bar=foo; path=/\", \"foo=bar; path=/\"]} \r\n\r\n\r\n  countries.my_response.cookies\r\n # => {\"bar\"=>\"foo\", \"foo\"=>\"bar\"}   \r\n ``` \r\n\r\n\r\n### About Http response \r\nhttp response is object of Net::HTTPOK, Net::HTTPClientError or one of other subclasses\r\nof Net::HTTPResponse class. For more information see documentation  http://www.ruby-doc.org/stdlib-1.9.3/libdoc/net/http/rdoc/Net/HTTPResponse.html\r\n\r\n\r\n### Inspirators\r\n\r\nhttp://phpblog.com.ua/2012/01/rails-activeresource-i-zagolovki/\r\n\r\nhttp://stackoverflow.com/questions/5972429/active-resource-responses-how-to-get-them\r\n\r\n\r\n### Please, feel free to contact me if you have any questions\r\nfedoronchuk(at)gmail.com","tagline":"Extensions to ActiveResource library. The simpliest way for REST pagination.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}